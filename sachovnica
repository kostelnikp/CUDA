__global__ void kernel_chessboard(CudaImg t_color_cuda_img)
{
    // X,Y coordinates and check image dimensions
    int l_y = blockDim.y * blockIdx.y + threadIdx.y;
    int l_x = blockDim.x * blockIdx.x + threadIdx.x;
    if (l_y >= t_color_cuda_img.m_size.y)
        return;
    if (l_x >= t_color_cuda_img.m_size.x)
        return;

    int red = 0;
    int green = 0;
    int blue = 0;

    // Set color based on block position
    int block_index = blockIdx.y * gridDim.x + blockIdx.x;
    int color_index = block_index % 3;
    if (color_index == 0)
    {
        red = 255;
    }
    else if (color_index == 1)
    {
        green = 255;
    }
    else
    {
        blue = 255;
    }

    t_color_cuda_img.m_p_uchar3[l_y * t_color_cuda_img.m_size.x + l_x].x = red;
    t_color_cuda_img.m_p_uchar3[l_y * t_color_cuda_img.m_size.x + l_x].y = green;
    t_color_cuda_img.m_p_uchar3[l_y * t_color_cuda_img.m_size.x + l_x].z = blue;
}
