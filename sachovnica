__global__ void kernel_chessboard(CudaImg t_color_cuda_img)
{
    // X,Y coordinates and check image dimensions
    int l_y = blockDim.y * blockIdx.y + threadIdx.y;
    int l_x = blockDim.x * blockIdx.x + threadIdx.x;
    if (l_y >= t_color_cuda_img.m_size.y)
        return;
    if (l_x >= t_color_cuda_img.m_size.x)
        return;

    int red = 255;
    int green = 0;
    int blue = 0;

    // Set color based on block position
    if (blockIdx.x % 2 == 0)
    {
        if (blockIdx.y % 2 == 0)
        {
            red = 255;
            green = 0;
            blue = 0;
        }
        else
        {
            red = 0;
            green = 255;
            blue = 0;
        }
    }
    else
    {
        if (blockIdx.y % 2 == 0)
        {
            green = 255;
            red = 0;
            blue = 0;
        }
        else
        {
            green = 0;
            red = 0;
            blue = 255;
        }
    }

    t_color_cuda_img.m_p_uchar3[l_y * t_color_cuda_img.m_size.x + l_x].x = red;
    t_color_cuda_img.m_p_uchar3[l_y * t_color_cuda_img.m_size.x + l_x].y = green;
    t_color_cuda_img.m_p_uchar3[l_y * t_color_cuda_img.m_size.x + l_x].z = blue;
}
